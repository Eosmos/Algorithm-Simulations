import{a as Tt}from"./chunk-ZW3SWSXV.js";import{I as _t,K,L as tt,N as G,R as Mt,S as Pt,V as Ot,Z as Et,c as Z,f as X,h as bt,k as Ct,m as J,q as I,r as yt,t as wt,u as L,v as St}from"./chunk-IMA2JTAA.js";import{h as mt}from"./chunk-TVQNEHER.js";import{B as vt,d as ht,i as Q,j as q,k,n as ut,o as Y,p as U,q as gt,r as D,w as ft,z as xt}from"./chunk-SKIYKJGI.js";import{j as ct,k as dt,o as pt}from"./chunk-VTXOXBVL.js";import{Da as ot,Ia as A,Oa as w,Pa as st,Qa as N,X as M,Xa as p,Y as P,Ya as c,Za as O,ab as W,db as _,eb as H,fa as nt,gb as E,hb as T,ib as z,kb as m,lb as B,mb as $,nb as j,ob as lt,ra as it,ta as rt,ua as v,za as at}from"./chunk-CS32D7W3.js";var Ft=["simulationContainer"],Vt=["datasetContainer"],At=["treeContainer"],Ht=["forestContainer"],Dt=["predictionContainer"],Bt=["featureImportanceContainer"],Gt=["oobErrorContainer"],Wt=["comparisonContainer"],$t=["canvas3d"];function Lt(S,t){if(S&1){let n=W();p(0,"div",38)(1,"label",67)(2,"input",68),_("change",function(i){M(n);let r=H();return P(r.onShowOobSamplesChange(i))}),c(),m(3," OOB Samples "),c(),p(4,"span",69),m(5,"\u24D8"),c()()}if(S&2){let n=H();v(2),w("checked",n.showOobSamples)}}function Nt(S,t){if(S&1){let n=W();p(0,"div",38)(1,"label",70)(2,"input",71),_("change",function(i){M(n);let r=H();return P(r.onShowSingleTreeChange(i))}),c(),m(3," Single Tree "),c(),p(4,"span",72),m(5,"\u24D8"),c()()}if(S&2){let n=H();v(2),w("checked",n.showSingleTree)}}function jt(S,t){S&1&&(p(0,"div",73),m(1,"Click to position test sample"),c())}function Qt(S,t){S&1&&(p(0,"div",52)(1,"div",53)(2,"div",54)(3,"h3"),m(4,"Feature Importance"),c(),O(5,"div",74,5),c(),p(7,"div",54)(8,"h3"),m(9,"Out-of-Bag Error"),c(),O(10,"div",75,6),c()(),p(12,"div",76)(13,"div",54)(14,"h3"),m(15,"Single Tree vs Random Forest Comparison"),c(),O(16,"div",77,7),c()()())}function qt(S,t){if(S&1&&(p(0,"div",81)(1,"h3"),m(2),c(),p(3,"p",82),m(4),c(),p(5,"p",83),m(6),c(),p(7,"p",84),m(8),c(),p(9,"a",85),m(10,"View Paper"),c()()),S&2){let n=t.$implicit;v(2),B(n.title),v(2),j("",n.author," (",n.year,")"),v(2),lt("",n.journal,", ",n.volume,", pages ",n.pages,""),v(2),$("DOI: ",n.doi,""),v(),w("href",n.link,it)}}function Yt(S,t){if(S&1&&(p(0,"div",78)(1,"h2"),m(2,"Research Papers"),c(),p(3,"div",79),A(4,qt,11,8,"div",80),c()()),S&2){let n=H();v(4),w("ngForOf",n.researchReferences)}}var zt=class S{constructor(t){this.ngZone=t}simulationContainer;datasetContainer;treeContainer;forestContainer;predictionContainer;featureImportanceContainer;oobErrorContainer;comparisonContainer;canvas3d;numTrees=5;maxDepth=3;numSamples=100;featureRandomness=!0;showTestSample=!0;viewMode="basic";researchReferences=[{title:"Random Forests",author:"Leo Breiman",year:2001,journal:"Machine Learning",volume:"45(1)",pages:"5-32",doi:"10.1023/A:1010933404324",link:"https://link.springer.com/article/10.1023/A:1010933404324"},{title:"Bagging Predictors",author:"Leo Breiman",year:1996,journal:"Machine Learning",volume:"24(2)",pages:"123-140",doi:"10.1007/BF00058655",link:"https://link.springer.com/article/10.1007/BF00058655"}];colors={primary:"#4285f4",lightPrimary:"#8bb4fa",darkPrimary:"#2c5cbd",secondary:"#7c4dff",lightSecondary:"#ae94ff",darkSecondary:"#5c35cc",accent:"#00c9ff",lightAccent:"#6edfff",darkAccent:"#0099cc",background:"#0c1428",cardBackground:"#162a4a",elementBackground:"#1e3a66",hoverBackground:"#2a4980",text:"#e1e7f5",mutedText:"#8a9ab0",success:"#24b47e",warning:"#ff9d45",error:"#ff6b6b",white:"#ffffff"};simulationState="stopped";currentStepIndex=0;simulationInterval;simulationSpeed=2e3;selectedTreeIndex=0;showOobSamples=!1;showSingleTree=!1;samples=[];trees=[];featureImportance=[];singleTree=null;testSample=null;predictionResults=[];oobErrorRates=[];oobCurve=[];datasetSvg;treeSvg;forestSvg;predictionSvg;featureImportanceSvg;oobErrorSvg;comparisonSvg;scene;camera;renderer;controls;forest3D=[];animationFrameId;currentExplanation="Welcome to the Random Forest Simulation. Press Play to start or use the Step buttons to manually progress. Toggle between Basic and Advanced view modes to see different levels of detail.";simulationSteps=[];ngOnInit(){this.generateSampleData(),this.buildForest(),this.buildSingleDecisionTree(),this.calculateFeatureImportance(),this.calculateOobError(),this.initializeSimulationSteps()}ngAfterViewInit(){this.initializeVisualization(),this.init3DForest(),this.animate()}ngOnDestroy(){this.simulationInterval&&clearInterval(this.simulationInterval),this.animationFrameId&&cancelAnimationFrame(this.animationFrameId),this.renderer&&this.renderer.dispose(),this.forest3D.forEach(t=>{t instanceof I&&(t.geometry&&t.geometry.dispose(),t.material&&(Array.isArray(t.material)?t.material.forEach(n=>n.dispose()):t.material.dispose()))})}onWindowResize(){if(this.camera&&this.renderer&&this.canvas3d){let t=this.canvas3d.nativeElement;this.camera.aspect=t.clientWidth/t.clientHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(t.clientWidth,t.clientHeight)}}init3DForest(){let t=this.canvas3d.nativeElement;this.scene=new St,this.scene.background=new Ct(this.colors.background),this.camera=new wt(75,t.clientWidth/t.clientHeight,.1,1e3),this.camera.position.z=15,this.camera.position.y=5,this.renderer=new Et({canvas:t,antialias:!0,alpha:!0}),this.renderer.setSize(t.clientWidth,t.clientHeight),this.renderer.setPixelRatio(window.devicePixelRatio),this.controls=new Tt(this.camera,this.renderer.domElement),this.controls.enableDamping=!0,this.controls.dampingFactor=.05;let n=new Pt(16777215,.5);this.scene.add(n);let e=new Mt(16777215,1);e.position.set(10,10,10),this.scene.add(e);let i=new Ot(20,20,5592405,3355443);this.scene.add(i),this.create3DForest(),window.addEventListener("resize",()=>{this.camera.aspect=t.clientWidth/t.clientHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(t.clientWidth,t.clientHeight)})}create3DForest(){this.forest3D.forEach(i=>this.scene.remove(i)),this.forest3D=[];let t=8,n=2*Math.PI/this.numTrees;for(let i=0;i<this.numTrees;i++){let r=new L;r.name=`tree-${i}`;let a=i*n,l=t*Math.cos(a),u=t*Math.sin(a);r.position.set(l,-2,u);let s=new _t(.2,.3,2,8),g=new G({color:9127187,roughness:.8}),x=new I(s,g);x.position.y=1,r.add(x);let o=(f,d,b)=>{let y=new L;y.position.y=f;let C=new tt(d,16,16);for(let R=0;R<b;R++){let V=R*(2*Math.PI/b),kt=d*.8*Math.cos(V),Rt=d*.8*Math.sin(V),It=new G({color:R%2===0?this.hexToRgb(this.colors.primary):this.hexToRgb(this.colors.secondary),roughness:.5,metalness:.2}),F=new I(C,It);F.position.set(kt,0,Rt),F.scale.set(0,0,0),y.add(F),setTimeout(()=>{let et=()=>{F.scale.x<.5&&(F.scale.x+=.05,F.scale.y+=.05,F.scale.z+=.05,requestAnimationFrame(et))};et()},i*200+R*100)}r.add(y)};o(2,1,1),this.maxDepth>=1&&o(3,.8,2),this.maxDepth>=2&&o(4,.6,4),this.maxDepth>=3&&o(5,.5,8),this.maxDepth>=4&&o(6,.4,16),this.scene.add(r),this.forest3D.push(r);let h=()=>{r.position.y<0?(r.position.y+=.2,requestAnimationFrame(h)):r.position.y<.2&&(r.position.y=-.2,setTimeout(()=>{let f=()=>{r.position.y<0?(r.position.y+=.05,requestAnimationFrame(f)):r.position.y=0};f()},100))};setTimeout(()=>{h()},i*200)}if(this.showTestSample&&this.testSample){let i=new tt(.5,16,16),r=new G({color:this.hexToRgb(this.colors.accent),roughness:.3,metalness:.7,emissive:this.hexToRgb(this.colors.lightAccent),emissiveIntensity:.3}),a=new I(i,r);a.position.set(0,.5,0),a.name="test-sample",this.scene.add(a),this.forest3D.push(a);let l=0,u=()=>{l+=.01,a.position.y=.5+Math.sin(l*2)*.5,requestAnimationFrame(u)};u()}if(this.featureImportance.length>0){let i=[...this.featureImportance].sort((a,l)=>l.importance-a.importance),r=new L;r.position.set(-10,0,-5),i.forEach((a,l)=>{let u=a.importance*5,s=new yt(1,u,1),g=new G({color:l===0?this.hexToRgb(this.colors.success):this.hexToRgb(this.colors.primary),roughness:.5,metalness:.2}),x=new I(s,g);x.position.set(l*2,u/2,0);let o=new K(1.5,.5),h=document.createElement("canvas");h.width=128,h.height=64;let f=h.getContext("2d");if(f){f.fillStyle="#ffffff",f.font="bold 30px Arial",f.textAlign="center",f.textBaseline="middle",f.fillText(a.feature,64,32);let d=new X(h);d.needsUpdate=!0;let b=new J({map:d,transparent:!0,side:Z}),y=new I(o,b);y.position.set(l*2,u+.5,0),y.rotation.x=-Math.PI/2,r.add(y)}r.add(x)}),this.scene.add(r),this.forest3D.push(r)}((i,r)=>{let a=new K(10,2),l=document.createElement("canvas");l.width=512,l.height=128;let u=l.getContext("2d");if(u){u.fillStyle="#ffffff",u.font="bold 36px Arial",u.textAlign="center",u.textBaseline="middle",u.fillText(i,256,64);let s=new X(l);s.needsUpdate=!0;let g=new J({map:s,transparent:!0,side:Z}),x=new I(a,g);x.position.copy(r),this.scene.add(x),this.forest3D.push(x)}})("Random Forest 3D Visualization",new bt(0,10,-10))}animate(){this.ngZone.runOutsideAngular(()=>{let t=()=>{this.animationFrameId=requestAnimationFrame(t),this.controls.update(),this.forest3D.forEach((n,e)=>{n.name&&n.name.startsWith("tree-")&&(n.rotation.y+=.002*(e%2?1:-1))}),this.renderer.render(this.scene,this.camera)};t()})}hexToRgb(t){let n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);if(!n)return 0;let e=parseInt(n[1],16),i=parseInt(n[2],16),r=parseInt(n[3],16);return e<<16|i<<8|r}generateSampleData(){this.samples=[];for(let t=0;t<this.numSamples/2;t++)this.samples.push({id:t,x1:25+Math.random()*15-7.5,x2:25+Math.random()*15-7.5,class:"A",selected:Array(this.numTrees).fill(!1),oobForTree:Array(this.numTrees).fill(!1)});for(let t=this.numSamples/2;t<this.numSamples;t++)this.samples.push({id:t,x1:75+Math.random()*15-7.5,x2:75+Math.random()*15-7.5,class:"B",selected:Array(this.numTrees).fill(!1),oobForTree:Array(this.numTrees).fill(!1)});for(let t=0;t<this.numSamples*.1;t++){let n=Math.floor(Math.random()*this.numSamples);this.samples[n].x1=Math.random()*100,this.samples[n].x2=Math.random()*100}this.testSample={id:this.numSamples,x1:50,x2:50,class:"?",selected:Array(this.numTrees).fill(!1),oobForTree:Array(this.numTrees).fill(!1)}}bootstrapSamples(t){let n=[],e=new Set;this.samples.forEach(r=>{r.selected[t]=!1,r.oobForTree[t]=!0});for(let r=0;r<this.numSamples;r++){let a=Math.floor(Math.random()*this.numSamples);n.push(a),e.add(a),this.samples[a].selected[t]=!0,this.samples[a].oobForTree[t]=!1}let i=[];for(let r=0;r<this.numSamples;r++)e.has(r)||i.push(r);return{sampledIndices:n,oobIndices:i}}selectRandomFeatures(){let t=["x1","x2"];if(!this.featureRandomness)return t;let n=Math.max(1,Math.floor(Math.random()*t.length)+1);return[...t].sort(()=>Math.random()-.5).slice(0,n)}calculateImpurity(t){if(t.length===0)return 0;let n={};for(let i of t)n[i.class]||(n[i.class]=0),n[i.class]++;let e=1;for(let i in n){let r=n[i]/t.length;e-=r*r}return e}findBestSplit(t,n){let e="",i=0,r=-1/0,a=[],l=[],u=this.calculateImpurity(t);for(let s of n){let g=[...t].sort((x,o)=>x[s]-o[s]);for(let x=0;x<g.length-1;x+=Math.max(1,Math.floor(g.length/10))){let o=(g[x][s]+g[x+1][s])/2,h=g.filter(V=>V[s]<=o),f=g.filter(V=>V[s]>o);if(h.length===0||f.length===0)continue;let d=this.calculateImpurity(h),b=this.calculateImpurity(f),y=h.length/t.length,C=f.length/t.length,R=u-(y*d+C*b);R>r&&(r=R,e=s,i=o,a=h,l=f)}}return{feature:e,threshold:i,impurityDecrease:r,leftSamples:a,rightSamples:l}}buildTree(t,n,e,i,r,a=new Map){let l=this.calculateImpurity(t);if(e>=i||l<.01||t.length<2){let d={};for(let C of t)d[C.class]||(d[C.class]=0),d[C.class]++;let b=0,y="";for(let C in d)d[C]>b&&(b=d[C],y=C);return{id:r,value:y,samples:t.length,depth:e,impurity:l}}let{feature:u,threshold:s,impurityDecrease:g,leftSamples:x,rightSamples:o}=this.findBestSplit(t,n);if(g<=0||!u){let d={};for(let C of t)d[C.class]||(d[C.class]=0),d[C.class]++;let b=0,y="";for(let C in d)d[C]>b&&(b=d[C],y=C);return{id:r,value:y,samples:t.length,depth:e,impurity:l}}let h=a.get(u)||0;a.set(u,h+g*t.length);let f={id:r,feature:u,threshold:s,samples:t.length,depth:e,impurity:l,featureImportance:g*t.length};return f.left=this.buildTree(x,n,e+1,i,r+"L",a),f.right=this.buildTree(o,n,e+1,i,r+"R",a),f}buildForest(){this.trees=[];let t=new Map;for(let n=0;n<this.numTrees;n++){let{sampledIndices:e,oobIndices:i}=this.bootstrapSamples(n),r=e.map(s=>this.samples[s]),a=this.selectRandomFeatures(),l=new Map,u=this.buildTree(r,a,0,this.maxDepth,`tree${n}_`,l);for(let[s,g]of l.entries()){let x=t.get(s)||0;t.set(s,x+g/this.numTrees)}this.trees.push({id:n,root:u,samples:e,features:a,oobIndices:i})}this.featureImportance=[];for(let[n,e]of t.entries())this.featureImportance.push({feature:n,importance:e/this.numSamples});this.featureImportance.sort((n,e)=>e.importance-n.importance)}buildSingleDecisionTree(){let t=["x1","x2"],n=new Map,e=this.buildTree(this.samples,t,0,this.maxDepth,"singleTree_",n);this.singleTree={id:-1,root:e,samples:this.samples.map((i,r)=>r),features:t}}calculateFeatureImportance(){for(let t of this.featureImportance){let n=t.feature,e=this.samples.map(s=>s[n]),r=this.samples.map(s=>this.makeForestPredictionForSample(s)).filter((s,g)=>s===this.samples[g].class).length/this.samples.length,a=[...e].sort(()=>Math.random()-.5);this.samples.forEach((s,g)=>s[n]=a[g]);let u=this.samples.map(s=>this.makeForestPredictionForSample(s)).filter((s,g)=>s===this.samples[g].class).length/this.samples.length;t.permutationImportance=r-u,this.samples.forEach((s,g)=>s[n]=e[g])}this.featureImportance.sort((t,n)=>(n.permutationImportance||0)-(t.permutationImportance||0))}calculateOobError(){this.oobErrorRates=Array(this.numTrees).fill(0),this.oobCurve=[];for(let t=0;t<this.numTrees;t++){let n=this.trees[t],e=0,i=0,r=n.oobIndices?n.oobIndices.map(g=>this.samples[g]):[];i=r.length;for(let g of r)this.predict(g,n)===g.class&&e++;let a=i>0?1-e/i:0;this.oobErrorRates[t]=a,this.trees[t].oobError=a;let l=t+1,u=0;for(let g of this.samples){let x=Array.from({length:l},(d,b)=>b).filter(d=>g.oobForTree[d]);if(x.length===0)continue;let o={};for(let d of x){let b=this.predict(g,this.trees[d]);o[b]=(o[b]||0)+1}let h=0,f="";for(let d in o)o[d]>h&&(h=o[d],f=d);f===g.class&&u++}let s=1-u/this.samples.length;this.oobCurve.push({numTrees:l,error:s})}}predict(t,n){let e=n.root;for(;e.left&&e.right&&e.feature;){let i=e.feature,r=e.threshold;t[i]<=r?e=e.left:e=e.right}return e.value||""}makeForestPredictionForSample(t){let n=this.trees.map(a=>this.predict(t,a)),e={};for(let a of n)e[a]||(e[a]=0),e[a]++;let i=0,r="";for(let a in e)e[a]>i&&(i=e[a],r=a);return r}makeForestPrediction(t){let n=this.trees.map(a=>this.predict(t,a)),e={};for(let a of n)e[a]||(e[a]=0),e[a]++;let i=0,r="";for(let a in e)e[a]>i&&(i=e[a],r=a);return this.predictionResults=n.map((a,l)=>({treeId:l,prediction:a})),r}initializeVisualization(){this.initializeDatasetViz(),this.initializeTreeViz(),this.initializeForestViz(),this.initializePredictionViz(),this.featureImportanceContainer&&this.initializeFeatureImportanceViz(),this.oobErrorContainer&&this.initializeOobErrorViz(),this.comparisonContainer&&this.initializeComparisonViz()}initializeDatasetViz(){let t=this.datasetContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;this.datasetSvg=k(t).append("svg").attr("width",n).attr("height",e).attr("viewBox","0 0 100 100").attr("preserveAspectRatio","xMidYMid meet"),this.datasetSvg.append("rect").attr("width",100).attr("height",100).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12),this.datasetSvg.selectAll("circle.sample").data(this.samples).enter().append("circle").attr("class","sample").attr("cx",function(i){return i.x1}).attr("cy",function(i){return i.x2}).attr("r",2).attr("fill",i=>i.class==="A"?this.colors.primary:this.colors.secondary).attr("opacity",0).transition().duration(1e3).delay((i,r)=>r*10).attr("opacity",1),this.testSample&&this.datasetSvg.append("circle").attr("class","test-sample").attr("cx",this.testSample.x1).attr("cy",this.testSample.x2).attr("r",3).attr("fill",this.colors.accent).attr("stroke",this.colors.white).attr("stroke-width",1).attr("opacity",0).transition().duration(1e3).delay(this.samples.length*10+500).attr("opacity",1),this.datasetSvg.append("line").attr("x1",0).attr("y1",100).attr("x2",100).attr("y2",100).attr("stroke",this.colors.mutedText).attr("stroke-width",.5),this.datasetSvg.append("line").attr("x1",0).attr("y1",0).attr("x2",0).attr("y2",100).attr("stroke",this.colors.mutedText).attr("stroke-width",.5),this.datasetSvg.append("text").attr("x",50).attr("y",98).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size",4).text("Feature 1"),this.datasetSvg.append("text").attr("x",2).attr("y",50).attr("text-anchor","start").attr("dominant-baseline","middle").attr("transform","rotate(-90, 2, 50)").attr("fill",this.colors.text).attr("font-size",4).text("Feature 2"),this.datasetSvg.append("circle").attr("cx",80).attr("cy",10).attr("r",2).attr("fill",this.colors.primary),this.datasetSvg.append("text").attr("x",84).attr("y",10).attr("dominant-baseline","middle").attr("fill",this.colors.text).attr("font-size",3).text("Class A"),this.datasetSvg.append("circle").attr("cx",80).attr("cy",16).attr("r",2).attr("fill",this.colors.secondary),this.datasetSvg.append("text").attr("x",84).attr("y",16).attr("dominant-baseline","middle").attr("fill",this.colors.text).attr("font-size",3).text("Class B"),this.datasetSvg.append("circle").attr("cx",80).attr("cy",22).attr("r",2).attr("fill",this.colors.accent).attr("stroke",this.colors.white).attr("stroke-width",.5),this.datasetSvg.append("text").attr("x",84).attr("y",22).attr("dominant-baseline","middle").attr("fill",this.colors.text).attr("font-size",3).text("Test Sample"),this.datasetSvg.append("circle").attr("cx",80).attr("cy",28).attr("r",2).attr("fill",this.colors.white).attr("stroke",this.colors.error).attr("stroke-width",.5),this.datasetSvg.append("text").attr("x",84).attr("y",28).attr("dominant-baseline","middle").attr("fill",this.colors.text).attr("font-size",3).text("OOB Sample")}initializeTreeViz(){let t=this.treeContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;this.treeSvg=k(t).append("svg").attr("width",n).attr("height",e),this.treeSvg.append("rect").attr("width",n).attr("height",e).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12)}initializeForestViz(){let t=this.forestContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;this.forestSvg=k(t).append("svg").attr("width",n).attr("height",e),this.forestSvg.append("rect").attr("width",n).attr("height",e).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12)}initializePredictionViz(){let t=this.predictionContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;this.predictionSvg=k(t).append("svg").attr("width",n).attr("height",e),this.predictionSvg.append("rect").attr("width",n).attr("height",e).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12)}initializeFeatureImportanceViz(){let t=this.featureImportanceContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;this.featureImportanceSvg=k(t).append("svg").attr("width",n).attr("height",e),this.featureImportanceSvg.append("rect").attr("width",n).attr("height",e).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12)}initializeOobErrorViz(){let t=this.oobErrorContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;this.oobErrorSvg=k(t).append("svg").attr("width",n).attr("height",e),this.oobErrorSvg.append("rect").attr("width",n).attr("height",e).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12)}initializeComparisonViz(){let t=this.comparisonContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;this.comparisonSvg=k(t).append("svg").attr("width",n).attr("height",e),this.comparisonSvg.append("rect").attr("width",n).attr("height",e).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12)}drawTree(t,n,e,i){n.selectAll("*").remove(),n.append("rect").attr("width",e).attr("height",i).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12);let r=Y(t.root,o=>{let h=[];return o.left&&h.push(o.left),o.right&&h.push(o.right),h.length>0?h:null}),l=U().size([e-60,i-60])(r),u=xt().x(o=>o.x).y(o=>o.y);n.append("g").attr("transform","translate(30, 40)").selectAll("path").data(l.links()).enter().append("path").attr("d",o=>{let h={x:o.source.x,y:o.source.y},f={x:o.source.x,y:o.source.y};return u({source:h,target:f})}).attr("stroke",this.colors.mutedText).attr("stroke-width",1.5).attr("fill","none").transition().duration(800).delay((o,h)=>h*100).attr("d",u);let g=n.append("g").attr("transform","translate(30, 40)").selectAll("g").data(l.descendants()).enter().append("g").attr("transform",o=>`translate(${o.x}, ${o.y})`).attr("opacity",0).attr("class","node").transition().duration(500).delay((o,h)=>h*100+300).attr("opacity",1),x=this;n.selectAll("g.node").append("circle").attr("r",o=>o.data.value?18:15).attr("fill",function(o){return o.data.value?o.data.value==="A"?x.colors.primary:x.colors.secondary:x.colors.elementBackground}).attr("stroke",this.colors.white).attr("stroke-width",1.5),n.selectAll("g.node").append("text").attr("text-anchor","middle").attr("dy",".3em").attr("fill",this.colors.white).attr("font-size","12px").text(o=>o.data.value?o.data.value:`${o.data.feature.toUpperCase()}`),n.selectAll("g.node").filter(o=>!o.data.value).append("text").attr("text-anchor","middle").attr("dy","2em").attr("fill",this.colors.lightAccent).attr("font-size","10px").text(o=>`\u2264 ${o.data.threshold.toFixed(1)}`),n.selectAll("g.node").append("text").attr("text-anchor","middle").attr("dy","3.5em").attr("fill",this.colors.mutedText).attr("font-size","8px").text(o=>`Gini=${o.data.impurity.toFixed(2)}`),n.selectAll("g.node").append("text").attr("text-anchor","middle").attr("dy","4.7em").attr("fill",this.colors.mutedText).attr("font-size","8px").text(o=>`n=${o.data.samples}`),n.selectAll("g.node").filter(o=>o.data.featureImportance!==void 0).append("text").attr("text-anchor","middle").attr("dy","5.9em").attr("fill",this.colors.success).attr("font-size","8px").text(o=>`Imp=${o.data.featureImportance.toFixed(3)}`),n.append("text").attr("x",e/2).attr("y",20).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","16px").text(`${t.id===-1?"Single Decision Tree":`Tree ${t.id+1}`}`),t.oobError!==void 0&&n.append("text").attr("x",e/2).attr("y",i-20).attr("text-anchor","middle").attr("fill",this.colors.error).attr("font-size","14px").text(`OOB Error: ${(t.oobError*100).toFixed(1)}%`),n.append("text").attr("x",e/2).attr("y",i-40).attr("text-anchor","middle").attr("fill",this.colors.lightAccent).attr("font-size","12px").text(`Features: ${t.features.join(", ")}`)}visualizeTreePrediction(t,n,e,i,r){this.drawTree(t,e,i,r);let a=t.root,l=[a];for(;a.left&&a.right&&a.feature;){let f=a.feature,d=a.threshold;n[f]<=d?a=a.left:a=a.right,l.push(a)}let u=Y(t.root,f=>{let d=[];return f.left&&d.push(f.left),f.right&&d.push(f.right),d.length>0?d:null}),g=U().size([i-60,r-60])(u),x=this;e.selectAll("g.node").select("circle").transition().duration(300).attr("stroke",function(f){let d=f.data.id;return l.some(y=>y.id===d)?x.colors.accent:x.colors.white}).attr("stroke-width",function(f){let d=f.data.id;return l.some(y=>y.id===d)?3:1.5}),e.selectAll("path").transition().duration(300).attr("stroke",function(f){let d=f.source.data.id,b=f.target.data.id;return l.some(C=>C.id===d)&&l.some(C=>C.id===b)?x.colors.accent:x.colors.mutedText}).attr("stroke-width",function(f){let d=f.source.data.id,b=f.target.data.id;return l.some(C=>C.id===d)&&l.some(C=>C.id===b)?2.5:1.5}),e.append("text").attr("x",i/2).attr("y",40).attr("text-anchor","middle").attr("fill",this.colors.accent).attr("font-size","14px").text(`Predicts: Class ${a.value}`).attr("opacity",0).transition().duration(500).attr("opacity",1)}drawForest(){let t=this.forestContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;this.forestSvg.selectAll("*").remove(),this.forestSvg.append("rect").attr("width",n).attr("height",e).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12);let i=n/this.numTrees,r=e*.6,a=e*.3;for(let l=0;l<this.numTrees;l++){let u=this.trees[l],s=i*l+i/2,g=this.forestSvg.append("g").attr("class","tree-group").attr("data-tree-id",l).style("cursor","pointer").on("click",()=>{this.selectedTreeIndex=l,this.updateVisualization(l)});g.append("rect").attr("x",s-i/2+5).attr("y",50).attr("width",i-10).attr("height",r).attr("fill","transparent").attr("stroke",this.selectedTreeIndex===l?this.colors.accent:"transparent").attr("stroke-width",2).attr("rx",8).attr("ry",8),g.attr("opacity",0).transition().duration(500).delay(l*200).attr("opacity",1),g.append("rect").attr("x",s-5).attr("y",a+30).attr("width",10).attr("height",40).attr("fill","#8B4513").attr("rx",2).attr("ry",2);let x=[this.colors.primary,this.colors.secondary,u.features.includes("x1")&&u.features.includes("x2")?this.colors.success:this.colors.warning];for(let o=0;o<3;o++){let h=25-o*5;g.append("circle").attr("cx",s).attr("cy",a-o*20).attr("r",h).attr("fill",x[o]).attr("opacity",.8)}g.append("text").attr("x",s).attr("y",a+90).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","14px").text(`Tree ${l+1}`),g.append("text").attr("x",s).attr("y",a+110).attr("text-anchor","middle").attr("fill",this.colors.mutedText).attr("font-size","12px").text(`Features: ${u.features.join(", ")}`),u.oobError!==void 0&&g.append("text").attr("x",s).attr("y",a+130).attr("text-anchor","middle").attr("fill",this.colors.error).attr("font-size","12px").text(`OOB: ${(u.oobError*100).toFixed(1)}%`)}this.forestSvg.append("text").attr("x",n/2).attr("y",30).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","18px").text(`Random Forest (${this.numTrees} Trees)`),this.forestSvg.append("text").attr("x",n/2).attr("y",e-20).attr("text-anchor","middle").attr("fill",this.colors.mutedText).attr("font-size","14px").text("Click on a tree to see its details")}drawPrediction(){let t=this.predictionContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;if(this.predictionSvg.selectAll("*").remove(),this.predictionSvg.append("rect").attr("width",n).attr("height",e).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12),!this.testSample||this.predictionResults.length===0){this.predictionSvg.append("text").attr("x",n/2).attr("y",e/2).attr("text-anchor","middle").attr("dominant-baseline","middle").attr("fill",this.colors.mutedText).attr("font-size","16px").text("Prediction will appear here");return}let i={};for(let h of this.predictionResults)i[h.prediction]||(i[h.prediction]=0),i[h.prediction]++;let r=0,a="";for(let h in i)i[h]>r&&(r=i[h],a=h);let l=40,u=20,s=e/2-l/2,g=0;for(let h in i)g+=i[h];let x=Object.keys(i).sort(),o=(n-100)/x.length;for(let h=0;h<x.length;h++){let f=x[h],d=50+h*o,b=i[f]/g,y=l+(e/2-l)*b;this.predictionSvg.append("rect").attr("x",d).attr("y",s).attr("width",o-u).attr("height",l).attr("fill",this.colors.elementBackground).attr("rx",6).attr("ry",6),this.predictionSvg.append("rect").attr("x",d).attr("y",s+l).attr("width",o-u).attr("height",0).attr("fill",f==="A"?this.colors.primary:this.colors.secondary).attr("rx",6).attr("ry",6).transition().duration(1e3).attr("y",s+l-y).attr("height",y),this.predictionSvg.append("text").attr("x",d+(o-u)/2).attr("y",s+l+20).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","14px").text(`Class ${f}`),this.predictionSvg.append("text").attr("x",d+(o-u)/2).attr("y",s+l+40).attr("text-anchor","middle").attr("fill",this.colors.mutedText).attr("font-size","12px").text(`${i[f]} votes (${(b*100).toFixed(0)}%)`),f===a&&(this.predictionSvg.append("text").attr("x",d+(o-u)/2).attr("y",s-15).attr("text-anchor","middle").attr("fill",this.colors.accent).attr("font-size","12px").text("MAJORITY"),this.predictionSvg.append("polygon").attr("points",`${d+(o-u)/2-10},${s-10} ${d+(o-u)/2+10},${s-10} ${d+(o-u)/2},${s}`).attr("fill",this.colors.accent))}this.predictionSvg.append("text").attr("x",n/2).attr("y",30).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","18px").text("Forest Prediction"),this.predictionSvg.append("text").attr("x",n/2).attr("y",e-40).attr("text-anchor","middle").attr("fill",this.colors.white).attr("font-size","20px").attr("font-weight","bold").text(`Final Prediction: Class ${a}`).attr("opacity",0).transition().duration(800).delay(1e3).attr("opacity",1),this.predictionSvg.append("text").attr("x",n/2).attr("y",e-20).attr("text-anchor","middle").attr("fill",this.colors.mutedText).attr("font-size","14px").text("Ensemble uses majority voting for classification")}drawFeatureImportance(){if(!this.featureImportanceContainer)return;let t=this.featureImportanceContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;if(this.featureImportanceSvg.selectAll("*").remove(),this.featureImportanceSvg.append("rect").attr("width",n).attr("height",e).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12),this.featureImportance.length===0){this.featureImportanceSvg.append("text").attr("x",n/2).attr("y",e/2).attr("text-anchor","middle").attr("dominant-baseline","middle").attr("fill",this.colors.mutedText).attr("font-size","16px").text("Feature Importance will appear here");return}this.featureImportanceSvg.append("text").attr("x",n/2).attr("y",30).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","18px").text("Feature Importance");let i={top:50,right:30,bottom:50,left:60},r=n-i.left-i.right,a=e-i.top-i.bottom,l=gt().domain(this.featureImportance.map(h=>h.feature)).range([0,a]).padding(.1),u=Math.max(...this.featureImportance.map(h=>Math.max(h.importance,h.permutationImportance||0))),s=D().domain([0,u*1.1]).range([0,r]),g=Q(s).ticks(5),x=q(l),o=this.featureImportanceSvg.append("g").attr("transform",`translate(${i.left},${i.top})`);if(o.append("g").attr("transform",`translate(0,${a})`).call(g).selectAll("text").attr("fill",this.colors.text),o.append("g").call(x).selectAll("text").attr("fill",this.colors.text),o.append("text").attr("x",r/2).attr("y",a+40).attr("text-anchor","middle").attr("fill",this.colors.text).text("Importance Score"),o.selectAll(".mdi-bar").data(this.featureImportance).enter().append("rect").attr("class","mdi-bar").attr("y",h=>l(h.feature)).attr("x",0).attr("height",l.bandwidth()/2).attr("width",0).attr("fill",this.colors.primary).transition().duration(1e3).attr("width",h=>s(h.importance)),this.featureImportance[0].permutationImportance!==void 0){o.selectAll(".perm-bar").data(this.featureImportance).enter().append("rect").attr("class","perm-bar").attr("y",f=>l(f.feature)+l.bandwidth()/2).attr("x",0).attr("height",l.bandwidth()/2).attr("width",0).attr("fill",this.colors.secondary).transition().duration(1e3).delay(500).attr("width",f=>s(f.permutationImportance||0));let h=this.featureImportanceSvg.append("g").attr("transform",`translate(${n-150}, 60)`);h.append("rect").attr("x",0).attr("y",0).attr("width",15).attr("height",15).attr("fill",this.colors.primary),h.append("text").attr("x",20).attr("y",12).attr("fill",this.colors.text).text("MDI"),h.append("rect").attr("x",0).attr("y",25).attr("width",15).attr("height",15).attr("fill",this.colors.secondary),h.append("text").attr("x",20).attr("y",37).attr("fill",this.colors.text).text("Permutation")}this.featureImportanceSvg.append("text").attr("x",n/2).attr("y",e-20).attr("text-anchor","middle").attr("fill",this.colors.mutedText).attr("font-size","14px").text("Higher values indicate more important features")}drawOobError(){if(!this.oobErrorContainer)return;let t=this.oobErrorContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;if(this.oobErrorSvg.selectAll("*").remove(),this.oobErrorSvg.append("rect").attr("width",n).attr("height",e).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12),this.oobCurve.length===0){this.oobErrorSvg.append("text").attr("x",n/2).attr("y",e/2).attr("text-anchor","middle").attr("dominant-baseline","middle").attr("fill",this.colors.mutedText).attr("font-size","16px").text("OOB Error will appear here");return}this.oobErrorSvg.append("text").attr("x",n/2).attr("y",30).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","18px").text("Out-of-Bag Error Rate");let i={top:50,right:30,bottom:50,left:60},r=n-i.left-i.right,a=e-i.top-i.bottom,l=D().domain([1,this.numTrees]).range([0,r]),u=D().domain([0,Math.max(.5,ht(this.oobCurve,d=>d.error)||.5)]).range([a,0]),s=Q(l).ticks(Math.min(this.numTrees,10)).tickFormat(ut("d")),g=q(u).tickFormat(d=>`${(Number(d)*100).toFixed(0)}%`),x=this.oobErrorSvg.append("g").attr("transform",`translate(${i.left},${i.top})`);x.append("g").attr("transform",`translate(0,${a})`).call(s).selectAll("text").attr("fill",this.colors.text),x.append("g").call(g).selectAll("text").attr("fill",this.colors.text),x.append("text").attr("x",r/2).attr("y",a+40).attr("text-anchor","middle").attr("fill",this.colors.text).text("Number of Trees"),x.append("text").attr("transform","rotate(-90)").attr("x",-a/2).attr("y",-40).attr("text-anchor","middle").attr("fill",this.colors.text).text("OOB Error Rate");let o=ft().x(d=>l(d.numTrees)).y(d=>u(d.error)).curve(vt),h=x.append("path").datum(this.oobCurve).attr("fill","none").attr("stroke",this.colors.accent).attr("stroke-width",3).attr("d",o),f=h.node().getTotalLength();h.attr("stroke-dasharray",f).attr("stroke-dashoffset",f).transition().duration(2e3).attr("stroke-dashoffset",0),x.selectAll(".dot").data(this.oobCurve).enter().append("circle").attr("class","dot").attr("cx",d=>l(d.numTrees)).attr("cy",d=>u(d.error)).attr("r",0).attr("fill",this.colors.white).attr("stroke",this.colors.accent).attr("stroke-width",2).transition().duration(1e3).delay((d,b)=>2e3+b*100).attr("r",4),this.oobErrorSvg.append("text").attr("x",n/2).attr("y",e-20).attr("text-anchor","middle").attr("fill",this.colors.mutedText).attr("font-size","14px").text("Error typically decreases as more trees are added, then stabilizes")}drawTreeComparison(){if(!this.comparisonContainer||!this.singleTree)return;let t=this.comparisonContainer.nativeElement,n=t.clientWidth,e=t.clientHeight;this.comparisonSvg.selectAll("*").remove(),this.comparisonSvg.append("rect").attr("width",n).attr("height",e).attr("fill",this.colors.cardBackground).attr("rx",12).attr("ry",12),this.comparisonSvg.append("text").attr("x",n/2).attr("y",30).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","18px").text("Single Tree vs Random Forest Comparison");let i=D().domain([0,100]).range([50,n-50]),r=D().domain([0,100]).range([e-50,50]),a=50,l=100/a,u=[];for(let s=0;s<a;s++)for(let g=0;g<a;g++){let x=s*l+l/2,o=g*l+l/2,h={id:-1,x1:x,x2:o,class:"?",selected:[],oobForTree:[]},f=this.predict(h,this.singleTree),d=this.makeForestPredictionForSample(h);u.push({x,y:o,singlePred:f,forestPred:d,match:f===d})}this.comparisonSvg.append("g").attr("transform",`translate(${n/4}, ${e/2})`).selectAll(".single-pred").data(u).enter().append("rect").attr("class","single-pred").attr("x",s=>i(s.x)-n/2-l/2).attr("y",s=>r(s.y)-e/4-l/2).attr("width",i(l)-i(0)).attr("height",r(0)-r(l)).attr("fill",s=>s.singlePred==="A"?this.colors.primary:this.colors.secondary).attr("opacity",.7),this.comparisonSvg.append("text").attr("x",n/4).attr("y",70).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","16px").text("Single Decision Tree"),this.comparisonSvg.append("g").attr("transform",`translate(${n*3/4}, ${e/2})`).selectAll(".forest-pred").data(u).enter().append("rect").attr("class","forest-pred").attr("x",s=>i(s.x)-n/2-l/2).attr("y",s=>r(s.y)-e/4-l/2).attr("width",i(l)-i(0)).attr("height",r(0)-r(l)).attr("fill",s=>s.forestPred==="A"?this.colors.primary:this.colors.secondary).attr("opacity",.7),this.comparisonSvg.append("text").attr("x",n*3/4).attr("y",70).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","16px").text("Random Forest"),[n/4,n*3/4].forEach(s=>{this.comparisonSvg.append("line").attr("x1",s-n/4+50).attr("y1",e/2+e/4-50).attr("x2",s+n/4-50).attr("y2",e/2+e/4-50).attr("stroke",this.colors.mutedText).attr("stroke-width",1),this.comparisonSvg.append("line").attr("x1",s-n/4+50).attr("y1",e/2-e/4+50).attr("x2",s-n/4+50).attr("y2",e/2+e/4-50).attr("stroke",this.colors.mutedText).attr("stroke-width",1),this.comparisonSvg.append("text").attr("x",s).attr("y",e/2+e/4-30).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","12px").text("Feature 1"),this.comparisonSvg.append("text").attr("transform","rotate(-90)").attr("x",-(e/2)).attr("y",s-n/4+30).attr("text-anchor","middle").attr("fill",this.colors.text).attr("font-size","12px").text("Feature 2")}),this.comparisonSvg.selectAll(".sample-points").data([n/4,n*3/4]).enter().append("g").attr("class","sample-points").attr("transform",s=>`translate(${s}, ${e/2})`).each((s,g,x)=>{k(x[g]).selectAll(".sample").data(this.samples).enter().append("circle").attr("class","sample").attr("cx",o=>i(o.x1)-n/2).attr("cy",o=>r(o.x2)-e/4).attr("r",2).attr("fill",o=>o.class==="A"?this.colors.primary:this.colors.secondary).attr("stroke",this.colors.white).attr("stroke-width",.5)}),this.comparisonSvg.append("text").attr("x",n/2).attr("y",e-20).attr("text-anchor","middle").attr("fill",this.colors.mutedText).attr("font-size","14px").text("Random Forest creates smoother decision boundaries than a single tree")}updateVisualization(t){if(this.updateDatasetViz(t),t!==void 0&&this.trees[t]){let n=this.treeContainer.nativeElement;this.drawTree(this.trees[t],this.treeSvg,n.clientWidth,n.clientHeight)}else if(this.showSingleTree&&this.singleTree){let n=this.treeContainer.nativeElement;this.drawTree(this.singleTree,this.treeSvg,n.clientWidth,n.clientHeight)}this.drawForest(),this.testSample&&this.predictionResults.length>0&&this.drawPrediction(),this.viewMode==="advanced"&&(this.drawFeatureImportance(),this.drawOobError(),this.drawTreeComparison())}updateDatasetViz(t){if(this.datasetSvg.selectAll("circle.sample").transition().duration(300).attr("r",2).attr("fill-opacity",1).attr("stroke","none"),t===void 0)return;let n=this;this.datasetSvg.selectAll("circle.sample").transition().duration(300).attr("r",function(e){return e.selected[t]?3:2}).attr("fill-opacity",function(e){return e.selected[t]?1:e.oobForTree[t]&&n.showOobSamples?.7:.3}).attr("stroke",function(e){return e.selected[t]?n.colors.white:e.oobForTree[t]&&n.showOobSamples?n.colors.error:"none"}).attr("stroke-width",function(e){return e.selected[t]?.5:e.oobForTree[t]&&n.showOobSamples?1:0})}initializeSimulationSteps(){this.simulationSteps=[{title:"Introduction to Random Forests",description:"Random Forests combine multiple decision trees trained on different data subsets with random feature selection to improve accuracy and reduce overfitting. Introduced by Leo Breiman in 2001, they have become one of the most popular and effective machine learning algorithms.",action:()=>{this.updateVisualization()}},{title:"Dataset Exploration",description:"We start with a dataset containing samples from two classes (A and B) with two features (x1 and x2). In a real-world scenario, Random Forests can handle many more features and classes.",action:()=>{this.updateVisualization()}},{title:"Bootstrap Sampling (Bagging)",description:"For each tree, we create a bootstrap sample by randomly selecting samples with replacement from the original dataset. This means some samples may be selected multiple times while others may not be selected at all.",action:()=>{this.updateVisualization(0),this.showOobSamples=!0}},{title:"Out-of-Bag (OOB) Samples",description:'Approximately 37% of samples are not selected in each bootstrap sample. These "out-of-bag" samples can be used for unbiased error estimation without needing a separate validation set.',action:()=>{this.updateVisualization(0),this.showOobSamples=!0}},{title:"Feature Randomness",description:"At each node, only a random subset of features is considered for splitting. For classification, typically sqrt(num_features) features are used. This creates diverse trees that make different kinds of mistakes.",action:()=>{let t=this.treeContainer.nativeElement;this.drawTree(this.trees[0],this.treeSvg,t.clientWidth,t.clientHeight)}},{title:"Growing Trees",description:"Each tree is grown independently using its bootstrap sample and random feature selection at each node. Trees are usually grown deep without pruning, as the ensemble nature handles overfitting.",action:()=>{let t=this.treeContainer.nativeElement;this.drawTree(this.trees[1],this.treeSvg,t.clientWidth,t.clientHeight)}},{title:"The Random Forest",description:"A Random Forest contains multiple trees, each trained on different data and with different feature subsets. This diversity is key to its performance, as it reduces the correlation between individual tree predictions.",action:()=>{this.drawForest()}},{title:"Making Predictions",description:"To predict a new sample, we run it through all trees and take a majority vote (for classification) or average (for regression). This aggregation of predictions leads to more stable and accurate results.",action:()=>{this.testSample&&(this.makeForestPrediction(this.testSample),this.drawPrediction())}},{title:"Tree Prediction Path",description:"Let's see how a single tree makes its prediction by tracing the path through the tree. Each internal node tests a feature against a threshold to determine which branch to take.",action:()=>{if(this.testSample){let t=this.treeContainer.nativeElement;this.visualizeTreePrediction(this.trees[0],this.testSample,this.treeSvg,t.clientWidth,t.clientHeight)}}},{title:"Different Trees, Different Paths",description:"Different trees may have different structures and predictions due to bootstrap sampling and feature randomness. This diversity is what makes Random Forests work so well.",action:()=>{if(this.testSample){let t=this.treeContainer.nativeElement;this.visualizeTreePrediction(this.trees[1],this.testSample,this.treeSvg,t.clientWidth,t.clientHeight)}}},{title:"Feature Importance",description:"Random Forests provide a measure of feature importance based on how much each feature contributes to reducing impurity across all trees. This helps identify which features are most predictive.",action:()=>{this.viewMode="advanced",this.drawFeatureImportance()}},{title:"OOB Error Estimation",description:"The out-of-bag error is calculated using samples not included in each tree's training set. It provides an unbiased estimate of the test error and shows how performance improves with more trees.",action:()=>{this.viewMode="advanced",this.drawOobError()}},{title:"Single Tree vs. Random Forest",description:"A Random Forest creates smoother decision boundaries compared to a single decision tree, leading to better generalization and less overfitting. The ensemble averages out the errors of individual trees.",action:()=>{this.viewMode="advanced",this.showSingleTree=!0,this.drawTreeComparison()}},{title:"Benefits of Random Forests",description:"Random Forests reduce overfitting, handle high-dimensional data well, provide feature importance metrics, are robust to outliers and noise, and work well for both classification and regression tasks.",action:()=>{this.updateVisualization(),this.drawForest(),this.drawPrediction(),this.viewMode="advanced",this.drawFeatureImportance(),this.drawOobError()}}]}startSimulation(){this.simulationState!=="playing"&&(this.simulationState="playing",this.playNextStep(),this.simulationInterval=setInterval(()=>{this.playNextStep()},this.simulationSpeed))}pauseSimulation(){this.simulationState="paused",this.simulationInterval&&clearInterval(this.simulationInterval)}stopSimulation(){this.simulationState="stopped",this.currentStepIndex=0,this.simulationInterval&&clearInterval(this.simulationInterval),this.currentExplanation="Welcome to the Random Forest Simulation. Press Play to start or use the Step buttons to manually progress. Toggle between Basic and Advanced view modes to see different levels of detail.",this.updateVisualization(),this.viewMode="basic",this.showOobSamples=!1,this.showSingleTree=!1}nextStep(){this.simulationState==="playing"&&this.pauseSimulation(),this.playNextStep()}previousStep(){this.simulationState==="playing"&&this.pauseSimulation(),this.currentStepIndex>0&&(this.currentStepIndex--,this.playCurrentStep())}playNextStep(){this.currentStepIndex<this.simulationSteps.length?(this.playCurrentStep(),this.currentStepIndex++):(this.pauseSimulation(),this.currentStepIndex=0)}playCurrentStep(){let t=this.simulationSteps[this.currentStepIndex];this.currentExplanation=`${t.title}: ${t.description}`,t.action()}onNumTreesChange(t){this.numTrees=parseInt(t.target.value),this.regenerateSimulation()}onMaxDepthChange(t){this.maxDepth=parseInt(t.target.value),this.regenerateSimulation()}onNumSamplesChange(t){this.numSamples=parseInt(t.target.value),this.regenerateSimulation()}onFeatureRandomnessChange(t){this.featureRandomness=t.target.checked,this.regenerateSimulation()}onShowTestSampleChange(t){this.showTestSample=t.target.checked,this.regenerateSimulation()}onViewModeChange(t){this.viewMode=t,setTimeout(()=>{this.initializeVisualization(),this.updateVisualization(this.selectedTreeIndex)},0)}onShowOobSamplesChange(t){this.showOobSamples=t.target.checked,this.updateDatasetViz(this.selectedTreeIndex)}onShowSingleTreeChange(t){this.showSingleTree=t.target.checked,this.updateVisualization(this.selectedTreeIndex)}onSimulationSpeedChange(t){this.simulationSpeed=parseInt(t.target.value),this.simulationState==="playing"&&(this.pauseSimulation(),this.startSimulation())}setTestSamplePosition(t){if(!this.testSample)return;let n=this.datasetContainer.nativeElement,e=n.getBoundingClientRect(),i=(t.clientX-e.left)/n.clientWidth*100,r=(t.clientY-e.top)/n.clientHeight*100;this.testSample.x1=i,this.testSample.x2=r,this.datasetSvg.select("circle.test-sample").attr("cx",i).attr("cy",r),this.predictionResults.length>0&&(this.makeForestPrediction(this.testSample),this.drawPrediction())}regenerateSimulation(){this.stopSimulation(),this.generateSampleData(),this.buildForest(),this.buildSingleDecisionTree(),this.calculateFeatureImportance(),this.calculateOobError(),this.initializeVisualization(),this.create3DForest()}toggleTreeDetails(t){this.selectedTreeIndex=t,this.updateVisualization(t)}getStepsLength(){return this.simulationSteps?this.simulationSteps.length:1}static \u0275fac=function(n){return new(n||S)(at(nt))};static \u0275cmp=ot({type:S,selectors:[["app-random-forest-visualization"]],viewQuery:function(n,e){if(n&1&&(E(Ft,5),E(Vt,5),E(At,5),E(Ht,5),E(Dt,5),E(Bt,5),E(Gt,5),E(Wt,5),E($t,5)),n&2){let i;T(i=z())&&(e.simulationContainer=i.first),T(i=z())&&(e.datasetContainer=i.first),T(i=z())&&(e.treeContainer=i.first),T(i=z())&&(e.forestContainer=i.first),T(i=z())&&(e.predictionContainer=i.first),T(i=z())&&(e.featureImportanceContainer=i.first),T(i=z())&&(e.oobErrorContainer=i.first),T(i=z())&&(e.comparisonContainer=i.first),T(i=z())&&(e.canvas3d=i.first)}},hostBindings:function(n,e){n&1&&_("resize",function(){return e.onWindowResize()},!1,rt)},decls:162,vars:28,consts:[["datasetContainer",""],["treeContainer",""],["forestContainer",""],["predictionContainer",""],["canvas3d",""],["featureImportanceContainer",""],["oobErrorContainer",""],["comparisonContainer",""],[1,"random-forest-container"],[1,"header"],[1,"description"],[1,"view-mode-toggle"],[3,"click"],[1,"controls-container"],[1,"control-panel"],[1,"simulation-controls"],[1,"button-group"],["title","Start the simulation",1,"control-btn",3,"click","disabled"],[1,"fas","fa-play"],["title","Pause the simulation",1,"control-btn",3,"click","disabled"],[1,"fas","fa-pause"],["title","Reset the simulation",1,"control-btn",3,"click","disabled"],[1,"fas","fa-stop"],["title","Go to previous step",1,"control-btn",3,"click","disabled"],[1,"fas","fa-step-backward"],["title","Go to next step",1,"control-btn",3,"click"],[1,"fas","fa-step-forward"],[1,"speed-control"],["for","simulation-speed"],["type","range","id","simulation-speed","min","500","max","5000","step","500",3,"change","value"],[1,"parameter-controls"],[1,"parameter-group"],["for","num-trees"],["type","range","id","num-trees","min","1","max","10","step","1",3,"change","value"],["for","max-depth"],["type","range","id","max-depth","min","1","max","5","step","1",3,"change","value"],["for","num-samples"],["type","range","id","num-samples","min","50","max","200","step","10",3,"change","value"],[1,"parameter-group","checkbox-group"],["for","feature-randomness"],["type","checkbox","id","feature-randomness",3,"change","checked"],["title","When enabled, each tree will use only a random subset of features at each split, creating more diverse trees.",1,"tooltip"],["for","show-test-sample"],["type","checkbox","id","show-test-sample",3,"change","checked"],["title","When enabled, a test sample will be shown that you can position by clicking in the dataset visualization.",1,"tooltip"],["class","parameter-group checkbox-group",4,"ngIf"],[1,"explanation-panel"],[1,"explanation-content"],[1,"simulation-progress"],[1,"progress-bar"],[1,"progress-fill"],[1,"step-indicator"],[1,"visualization-container"],[1,"visualization-row"],[1,"visualization-card"],[1,"visualization-content","dataset-viz",3,"click"],["class","viz-tooltip",4,"ngIf"],[1,"visualization-content","tree-viz"],[1,"visualization-content","forest-viz"],[1,"visualization-content","prediction-viz"],["class","visualization-container",4,"ngIf"],[1,"visualization-3d-container"],[1,"canvas-3d"],[1,"canvas-instruction"],["class","research-section",4,"ngIf"],[1,"info-section"],[1,"info-card"],["for","show-oob-samples"],["type","checkbox","id","show-oob-samples",3,"change","checked"],["title","When enabled, out-of-bag samples (not used in bootstrap sample) will be highlighted.",1,"tooltip"],["for","show-single-tree"],["type","checkbox","id","show-single-tree",3,"change","checked"],["title","When enabled, shows a single decision tree for comparison with the Random Forest.",1,"tooltip"],[1,"viz-tooltip"],[1,"visualization-content","feature-importance-viz"],[1,"visualization-content","oob-error-viz"],[1,"visualization-row","single-row"],[1,"visualization-content","comparison-viz"],[1,"research-section"],[1,"paper-cards"],["class","paper-card",4,"ngFor","ngForOf"],[1,"paper-card"],[1,"paper-author"],[1,"paper-journal"],[1,"paper-doi"],["target","_blank",1,"paper-link",3,"href"]],template:function(n,e){if(n&1){let i=W();p(0,"div",8)(1,"div",9)(2,"h1"),m(3,"Random Forest Algorithm Visualization"),c(),p(4,"p",10),m(5," Explore how Random Forests combine multiple decision trees to improve prediction accuracy and reduce overfitting. "),c(),p(6,"div",11)(7,"button",12),_("click",function(){return M(i),P(e.onViewModeChange("basic"))}),m(8,"Basic View"),c(),p(9,"button",12),_("click",function(){return M(i),P(e.onViewModeChange("advanced"))}),m(10,"Advanced View"),c()()(),p(11,"div",13)(12,"div",14)(13,"div",15)(14,"h3"),m(15,"Simulation Controls"),c(),p(16,"div",16)(17,"button",17),_("click",function(){return M(i),P(e.startSimulation())}),O(18,"i",18),m(19," Play "),c(),p(20,"button",19),_("click",function(){return M(i),P(e.pauseSimulation())}),O(21,"i",20),m(22," Pause "),c(),p(23,"button",21),_("click",function(){return M(i),P(e.stopSimulation())}),O(24,"i",22),m(25," Reset "),c(),p(26,"button",23),_("click",function(){return M(i),P(e.previousStep())}),O(27,"i",24),m(28," Previous "),c(),p(29,"button",25),_("click",function(){return M(i),P(e.nextStep())}),O(30,"i",26),m(31," Next "),c()(),p(32,"div",27)(33,"label",28),m(34,"Speed:"),c(),p(35,"input",29),_("change",function(a){return M(i),P(e.onSimulationSpeedChange(a))}),c(),p(36,"span"),m(37),c()()(),p(38,"div",30)(39,"h3"),m(40,"Algorithm Parameters"),c(),p(41,"div",31)(42,"label",32),m(43,"Trees:"),c(),p(44,"input",33),_("change",function(a){return M(i),P(e.onNumTreesChange(a))}),c(),p(45,"span"),m(46),c()(),p(47,"div",31)(48,"label",34),m(49,"Depth:"),c(),p(50,"input",35),_("change",function(a){return M(i),P(e.onMaxDepthChange(a))}),c(),p(51,"span"),m(52),c()(),p(53,"div",31)(54,"label",36),m(55,"Samples:"),c(),p(56,"input",37),_("change",function(a){return M(i),P(e.onNumSamplesChange(a))}),c(),p(57,"span"),m(58),c()(),p(59,"div",38)(60,"label",39)(61,"input",40),_("change",function(a){return M(i),P(e.onFeatureRandomnessChange(a))}),c(),m(62," Feature Randomness "),c(),p(63,"span",41),m(64,"\u24D8"),c()(),p(65,"div",38)(66,"label",42)(67,"input",43),_("change",function(a){return M(i),P(e.onShowTestSampleChange(a))}),c(),m(68," Show Test Sample "),c(),p(69,"span",44),m(70,"\u24D8"),c()(),A(71,Lt,6,1,"div",45)(72,Nt,6,1,"div",45),c()(),p(73,"div",46)(74,"h3"),m(75,"Explanation"),c(),p(76,"div",47),m(77),c(),p(78,"div",48)(79,"div",49),O(80,"div",50),c(),p(81,"div",51),m(82),c()()()(),p(83,"div",52)(84,"div",53)(85,"div",54)(86,"h3"),m(87,"Dataset"),c(),p(88,"div",55,0),_("click",function(a){return M(i),P(e.setTestSamplePosition(a))}),c(),A(90,jt,2,0,"div",56),c(),p(91,"div",54)(92,"h3"),m(93,"Decision Tree"),c(),O(94,"div",57,1),c()(),p(96,"div",53)(97,"div",54)(98,"h3"),m(99,"Random Forest"),c(),O(100,"div",58,2),c(),p(102,"div",54)(103,"h3"),m(104,"Prediction"),c(),O(105,"div",59,3),c()()(),A(107,Qt,18,0,"div",60),p(108,"div",61)(109,"h2"),m(110,"3D Forest Visualization"),c(),O(111,"canvas",62,4),p(113,"div",63),m(114,"Drag to rotate, scroll to zoom"),c()(),A(115,Yt,5,1,"div",64),p(116,"div",65)(117,"div",66)(118,"h3"),m(119,"What are Random Forests?"),c(),p(120,"p"),m(121," Random Forests are an ensemble learning method that combines multiple decision trees to improve prediction accuracy and reduce overfitting. Each tree is trained on a random subset of the data (bootstrapping) and considers only a random subset of features at each split. "),c()(),p(122,"div",66)(123,"h3"),m(124,"Key Components"),c(),p(125,"ul")(126,"li")(127,"strong"),m(128,"Bootstrapping:"),c(),m(129," Random sampling with replacement creates diverse training sets"),c(),p(130,"li")(131,"strong"),m(132,"Feature Randomness:"),c(),m(133," Only considering a subset of features at each split adds diversity"),c(),p(134,"li")(135,"strong"),m(136,"Decision Trees:"),c(),m(137," Simple models that make decisions based on feature thresholds"),c(),p(138,"li")(139,"strong"),m(140,"Aggregation:"),c(),m(141," Combining predictions through voting (classification) or averaging (regression)"),c(),p(142,"li")(143,"strong"),m(144,"Out-of-Bag Estimation:"),c(),m(145," Using samples not in bootstrap to estimate generalization error"),c()()(),p(146,"div",66)(147,"h3"),m(148,"Advantages"),c(),p(149,"ul")(150,"li"),m(151,"Reduces overfitting compared to single decision trees"),c(),p(152,"li"),m(153,"Handles high-dimensional data well without feature selection"),c(),p(154,"li"),m(155,"Provides reliable feature importance metrics"),c(),p(156,"li"),m(157,"Robust to outliers and noise in the data"),c(),p(158,"li"),m(159,"Works well for both classification and regression tasks"),c(),p(160,"li"),m(161,"Maintains accuracy when a large proportion of data is missing"),c()()()()()}n&2&&(v(7),N("active",e.viewMode==="basic"),v(2),N("active",e.viewMode==="advanced"),v(8),w("disabled",e.simulationState==="playing"),v(3),w("disabled",e.simulationState!=="playing"),v(3),w("disabled",e.simulationState==="stopped"),v(3),w("disabled",e.currentStepIndex===0),v(9),w("value",e.simulationSpeed),v(2),$("",e.simulationSpeed/1e3,"s"),v(7),w("value",e.numTrees),v(2),B(e.numTrees),v(4),w("value",e.maxDepth),v(2),B(e.maxDepth),v(4),w("value",e.numSamples),v(2),B(e.numSamples),v(3),w("checked",e.featureRandomness),v(6),w("checked",e.showTestSample),v(4),w("ngIf",e.viewMode==="advanced"),v(),w("ngIf",e.viewMode==="advanced"),v(5),$(" ",e.currentExplanation," "),v(3),st("width",e.currentStepIndex/e.getStepsLength()*100,"%"),v(2),j("Step ",e.currentStepIndex+1," of ",e.getStepsLength(),""),v(8),w("ngIf",e.showTestSample),v(17),w("ngIf",e.viewMode==="advanced"),v(8),w("ngIf",e.viewMode==="advanced"))},dependencies:[pt,ct,dt,mt],styles:['.random-forest-container[_ngcontent-%COMP%]{font-family:Inter,Roboto,sans-serif;color:#e1e7f5;background-color:#0c1428;padding:16px;width:100%;box-sizing:border-box;display:flex;flex-direction:column;gap:32px;overflow-x:hidden}@media (min-width: 768px){.random-forest-container[_ngcontent-%COMP%]{padding:32px}}.header[_ngcontent-%COMP%]{text-align:center;margin-bottom:32px}.header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2rem;margin-bottom:16px;background:linear-gradient(135deg,#4285f4,#7c4dff);-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text;color:transparent;text-shadow:0 2px 4px rgba(0,0,0,.2)}@media (min-width: 768px){.header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.5rem}}.header[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]{font-size:1rem;max-width:90%;margin:0 auto 16px;color:#8a9ab0;line-height:1.6}@media (min-width: 768px){.header[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]{font-size:1.2rem;max-width:800px}}.header[_ngcontent-%COMP%]   .view-mode-toggle[_ngcontent-%COMP%]{display:flex;justify-content:center;gap:16px;margin-top:24px}.header[_ngcontent-%COMP%]   .view-mode-toggle[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#1e3a66;color:#e1e7f5;border:none;border-radius:8px;padding:8px 24px;cursor:pointer;transition:all .2s ease;font-weight:500}.header[_ngcontent-%COMP%]   .view-mode-toggle[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#2a4980}.header[_ngcontent-%COMP%]   .view-mode-toggle[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{background-color:#4285f4;box-shadow:0 2px 4px #0000001a}.controls-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:32px;margin-bottom:32px}@media (min-width: 992px){.controls-container[_ngcontent-%COMP%]{flex-direction:row}}.control-panel[_ngcontent-%COMP%]{background-color:#162a4a;border-radius:12px;padding:16px;box-shadow:0 4px 8px #00000026;display:flex;flex-direction:column;gap:24px;flex:1}@media (min-width: 768px){.control-panel[_ngcontent-%COMP%]{padding:24px}}.control-panel[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-top:0;margin-bottom:16px;color:#fff;font-size:1.2rem;position:relative}@media (min-width: 768px){.control-panel[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:1.3rem}}.control-panel[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-8px;left:0;width:40px;height:3px;background:linear-gradient(90deg,#4285f4,#7c4dff);border-radius:3px}.simulation-controls[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:16px}.simulation-controls[_ngcontent-%COMP%]   .button-group[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:8px;justify-content:center}@media (min-width: 768px){.simulation-controls[_ngcontent-%COMP%]   .button-group[_ngcontent-%COMP%]{justify-content:flex-start}}.simulation-controls[_ngcontent-%COMP%]   .control-btn[_ngcontent-%COMP%]{background-color:#1e3a66;color:#e1e7f5;border:none;border-radius:8px;padding:8px 16px;cursor:pointer;transition:all .2s ease;display:flex;align-items:center;gap:4px;font-weight:500;flex-grow:1;justify-content:center;max-width:100px}@media (min-width: 768px){.simulation-controls[_ngcontent-%COMP%]   .control-btn[_ngcontent-%COMP%]{flex-grow:0}}.simulation-controls[_ngcontent-%COMP%]   .control-btn[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#2a4980}.simulation-controls[_ngcontent-%COMP%]   .control-btn[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:not-allowed}.simulation-controls[_ngcontent-%COMP%]   .control-btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:.9rem}.simulation-controls[_ngcontent-%COMP%]   .speed-control[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;margin-top:8px}@media (min-width: 768px){.simulation-controls[_ngcontent-%COMP%]   .speed-control[_ngcontent-%COMP%]{gap:16px}}.simulation-controls[_ngcontent-%COMP%]   .speed-control[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{min-width:50px;white-space:nowrap}@media (min-width: 768px){.simulation-controls[_ngcontent-%COMP%]   .speed-control[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{min-width:60px}}.simulation-controls[_ngcontent-%COMP%]   .speed-control[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]{flex:1;height:6px;appearance:none;background:#1e3a66;border-radius:3px;outline:none}.simulation-controls[_ngcontent-%COMP%]   .speed-control[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{appearance:none;width:16px;height:16px;border-radius:50%;background:#00c9ff;cursor:pointer}.simulation-controls[_ngcontent-%COMP%]   .speed-control[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{min-width:30px;text-align:right}.parameter-controls[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:16px}.parameter-controls[_ngcontent-%COMP%]   .parameter-group[_ngcontent-%COMP%]{display:flex;align-items:center;gap:16px}.parameter-controls[_ngcontent-%COMP%]   .parameter-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{min-width:70px;display:flex;align-items:center;gap:4px}@media (min-width: 768px){.parameter-controls[_ngcontent-%COMP%]   .parameter-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{min-width:80px}}.parameter-controls[_ngcontent-%COMP%]   .parameter-group.checkbox-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{min-width:auto;margin-right:4px}.parameter-controls[_ngcontent-%COMP%]   .parameter-group[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]{flex:1;height:6px;appearance:none;background:#1e3a66;border-radius:3px;outline:none}.parameter-controls[_ngcontent-%COMP%]   .parameter-group[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{appearance:none;width:16px;height:16px;border-radius:50%;background:#4285f4;cursor:pointer}.parameter-controls[_ngcontent-%COMP%]   .parameter-group[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{width:18px;height:18px;accent-color:#4285f4;margin-right:4px}.parameter-controls[_ngcontent-%COMP%]   .parameter-group[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{min-width:30px;text-align:right}.parameter-controls[_ngcontent-%COMP%]   .parameter-group[_ngcontent-%COMP%]   .tooltip[_ngcontent-%COMP%]{color:#64b5f6;font-size:.9rem;cursor:help;position:relative}.parameter-controls[_ngcontent-%COMP%]   .parameter-group[_ngcontent-%COMP%]   .tooltip[_ngcontent-%COMP%]:hover:before{content:attr(title);position:absolute;bottom:100%;left:50%;transform:translate(-50%);background-color:#162a4a;color:#e1e7f5;padding:8px 16px;border-radius:8px;font-size:.8rem;white-space:nowrap;width:max-content;max-width:200px;box-shadow:0 4px 8px #00000026;z-index:10}@media (min-width: 768px){.parameter-controls[_ngcontent-%COMP%]   .parameter-group[_ngcontent-%COMP%]   .tooltip[_ngcontent-%COMP%]:hover:before{white-space:normal}}.explanation-panel[_ngcontent-%COMP%]{background-color:#162a4a;border-radius:12px;padding:16px;box-shadow:0 4px 8px #00000026;flex:1;display:flex;flex-direction:column}@media (min-width: 768px){.explanation-panel[_ngcontent-%COMP%]{padding:24px}}.explanation-panel[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-top:0;margin-bottom:16px;color:#fff;font-size:1.2rem;position:relative}@media (min-width: 768px){.explanation-panel[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:1.3rem}}.explanation-panel[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-8px;left:0;width:40px;height:3px;background:linear-gradient(90deg,#4285f4,#7c4dff);border-radius:3px}.explanation-panel[_ngcontent-%COMP%]   .explanation-content[_ngcontent-%COMP%]{line-height:1.6;font-size:1rem;color:#e1e7f5;flex:1;margin-bottom:24px}@media (min-width: 768px){.explanation-panel[_ngcontent-%COMP%]   .explanation-content[_ngcontent-%COMP%]{font-size:1.1rem}}.explanation-panel[_ngcontent-%COMP%]   .simulation-progress[_ngcontent-%COMP%]{margin-top:auto}.explanation-panel[_ngcontent-%COMP%]   .simulation-progress[_ngcontent-%COMP%]   .progress-bar[_ngcontent-%COMP%]{width:100%;height:6px;background-color:#1e3a66;border-radius:3px;overflow:hidden;margin-bottom:8px}.explanation-panel[_ngcontent-%COMP%]   .simulation-progress[_ngcontent-%COMP%]   .progress-bar[_ngcontent-%COMP%]   .progress-fill[_ngcontent-%COMP%]{height:100%;background:linear-gradient(90deg,#00c9ff,#4285f4);transition:width .3s ease}.explanation-panel[_ngcontent-%COMP%]   .simulation-progress[_ngcontent-%COMP%]   .step-indicator[_ngcontent-%COMP%]{text-align:right;font-size:.9rem;color:#8a9ab0}.visualization-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:32px;overflow-x:hidden;width:100%}.visualization-row[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:32px;width:100%}@media (min-width: 992px){.visualization-row[_ngcontent-%COMP%]{flex-direction:row}}.visualization-row.single-row[_ngcontent-%COMP%]{flex-direction:column}.visualization-card[_ngcontent-%COMP%]{background-color:#162a4a;border-radius:12px;padding:16px;box-shadow:0 4px 8px #00000026;flex:1;display:flex;flex-direction:column;position:relative;width:100%;box-sizing:border-box}@media (min-width: 768px){.visualization-card[_ngcontent-%COMP%]{padding:24px}}.visualization-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-top:0;margin-bottom:16px;color:#fff;font-size:1.2rem;text-align:center;position:relative}@media (min-width: 768px){.visualization-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:1.3rem}}.visualization-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-8px;left:50%;transform:translate(-50%);width:40px;height:3px;background:linear-gradient(90deg,#4285f4,#7c4dff);border-radius:3px}.visualization-card[_ngcontent-%COMP%]   .visualization-content[_ngcontent-%COMP%]{flex:1;min-height:250px;display:flex;justify-content:center;align-items:center;position:relative;overflow:hidden}@media (min-width: 768px){.visualization-card[_ngcontent-%COMP%]   .visualization-content[_ngcontent-%COMP%]{min-height:300px}}.visualization-card[_ngcontent-%COMP%]   .viz-tooltip[_ngcontent-%COMP%]{position:absolute;bottom:8px;left:50%;transform:translate(-50%);font-size:.8rem;color:#64b5f6;background-color:#0c1428cc;padding:4px 16px;border-radius:8px;white-space:nowrap}.visualization-3d-container[_ngcontent-%COMP%]{background-color:#162a4a;border-radius:12px;padding:16px;box-shadow:0 4px 8px #00000026;margin-top:32px;position:relative;width:100%;box-sizing:border-box}@media (min-width: 768px){.visualization-3d-container[_ngcontent-%COMP%]{padding:24px}}.visualization-3d-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-top:0;margin-bottom:24px;color:#fff;font-size:1.3rem;text-align:center;position:relative}@media (min-width: 768px){.visualization-3d-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.5rem}}.visualization-3d-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-8px;left:50%;transform:translate(-50%);width:60px;height:3px;background:linear-gradient(90deg,#4285f4,#7c4dff);border-radius:3px}.visualization-3d-container[_ngcontent-%COMP%]   .canvas-3d[_ngcontent-%COMP%]{width:100%;height:300px;border-radius:8px;background-color:#0c1428;cursor:grab}@media (min-width: 768px){.visualization-3d-container[_ngcontent-%COMP%]   .canvas-3d[_ngcontent-%COMP%]{height:400px}}.visualization-3d-container[_ngcontent-%COMP%]   .canvas-3d[_ngcontent-%COMP%]:active{cursor:grabbing}.visualization-3d-container[_ngcontent-%COMP%]   .canvas-instruction[_ngcontent-%COMP%]{position:absolute;bottom:16px;right:16px;font-size:.8rem;color:#8a9ab0;background-color:#0c1428cc;padding:4px 16px;border-radius:8px}.research-section[_ngcontent-%COMP%]{background-color:#162a4a;border-radius:12px;padding:16px;box-shadow:0 4px 8px #00000026;margin-top:32px;width:100%;box-sizing:border-box}@media (min-width: 768px){.research-section[_ngcontent-%COMP%]{padding:24px}}.research-section[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-top:0;margin-bottom:24px;color:#fff;font-size:1.3rem;text-align:center;position:relative}@media (min-width: 768px){.research-section[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.5rem}}.research-section[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-8px;left:50%;transform:translate(-50%);width:60px;height:3px;background:linear-gradient(90deg,#4285f4,#7c4dff);border-radius:3px}.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:24px;justify-content:center}.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]   .paper-card[_ngcontent-%COMP%]{background-color:#1e3a66;border-radius:8px;padding:16px;width:100%;max-width:300px;box-shadow:0 2px 4px #0000001a}@media (min-width: 768px){.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]   .paper-card[_ngcontent-%COMP%]{width:calc(50% - 24px)}}@media (min-width: 1200px){.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]   .paper-card[_ngcontent-%COMP%]{width:300px}}.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]   .paper-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-top:0;margin-bottom:16px;font-size:1.1rem;color:#fff}@media (min-width: 768px){.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]   .paper-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:1.2rem}}.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]   .paper-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:8px 0;font-size:.9rem;color:#e1e7f5}.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]   .paper-card[_ngcontent-%COMP%]   p.paper-author[_ngcontent-%COMP%]{color:#64b5f6;font-weight:500}.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]   .paper-card[_ngcontent-%COMP%]   p.paper-journal[_ngcontent-%COMP%]{font-style:italic}.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]   .paper-card[_ngcontent-%COMP%]   p.paper-doi[_ngcontent-%COMP%]{color:#8a9ab0;font-size:.8rem}.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]   .paper-card[_ngcontent-%COMP%]   .paper-link[_ngcontent-%COMP%]{display:inline-block;margin-top:16px;background-color:#4285f4;color:#fff;text-decoration:none;padding:8px 16px;border-radius:8px;font-size:.9rem;transition:background-color .2s ease}.research-section[_ngcontent-%COMP%]   .paper-cards[_ngcontent-%COMP%]   .paper-card[_ngcontent-%COMP%]   .paper-link[_ngcontent-%COMP%]:hover{background-color:#2c5cbd}.info-section[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:32px;margin-top:32px;width:100%}@media (min-width: 992px){.info-section[_ngcontent-%COMP%]{flex-direction:row}}.info-section[_ngcontent-%COMP%]   .info-card[_ngcontent-%COMP%]{background-color:#162a4a;border-radius:12px;padding:16px;box-shadow:0 4px 8px #00000026;flex:1}@media (min-width: 768px){.info-section[_ngcontent-%COMP%]   .info-card[_ngcontent-%COMP%]{padding:24px}}.info-section[_ngcontent-%COMP%]   .info-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-top:0;margin-bottom:16px;color:#fff;font-size:1.2rem;position:relative}@media (min-width: 768px){.info-section[_ngcontent-%COMP%]   .info-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:1.3rem}}.info-section[_ngcontent-%COMP%]   .info-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:-8px;left:0;width:40px;height:3px;background:linear-gradient(90deg,#4285f4,#7c4dff);border-radius:3px}.info-section[_ngcontent-%COMP%]   .info-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{line-height:1.6;color:#e1e7f5;font-size:.95rem}@media (min-width: 768px){.info-section[_ngcontent-%COMP%]   .info-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1rem}}.info-section[_ngcontent-%COMP%]   .info-card[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{padding-left:24px;margin:16px 0}.info-section[_ngcontent-%COMP%]   .info-card[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-bottom:8px;color:#e1e7f5;line-height:1.6;font-size:.95rem}@media (min-width: 768px){.info-section[_ngcontent-%COMP%]   .info-card[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{font-size:1rem}}.info-section[_ngcontent-%COMP%]   .info-card[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:#fff}.dataset-viz[_ngcontent-%COMP%]{cursor:pointer}.dataset-viz[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:100%;height:100%}.tree-viz[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%], .forest-viz[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%], .prediction-viz[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%], .feature-importance-viz[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%], .oob-error-viz[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%], .comparison-viz[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:100%;height:100%}.tree-viz[_ngcontent-%COMP%]   svg[preserveAspectRatio="xMidYMid meet"][_ngcontent-%COMP%], .forest-viz[_ngcontent-%COMP%]   svg[preserveAspectRatio="xMidYMid meet"][_ngcontent-%COMP%], .prediction-viz[_ngcontent-%COMP%]   svg[preserveAspectRatio="xMidYMid meet"][_ngcontent-%COMP%], .feature-importance-viz[_ngcontent-%COMP%]   svg[preserveAspectRatio="xMidYMid meet"][_ngcontent-%COMP%], .oob-error-viz[_ngcontent-%COMP%]   svg[preserveAspectRatio="xMidYMid meet"][_ngcontent-%COMP%], .comparison-viz[_ngcontent-%COMP%]   svg[preserveAspectRatio="xMidYMid meet"][_ngcontent-%COMP%]{width:100%;height:100%;display:block}@keyframes _ngcontent-%COMP%_pulse{0%{transform:scale(1)}50%{transform:scale(1.05)}to{transform:scale(1)}}.pulse[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pulse 2s infinite}@keyframes _ngcontent-%COMP%_fadeIn{0%{opacity:0}to{opacity:1}}.fade-in[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_fadeIn .5s ease-in}@media print{.random-forest-container[_ngcontent-%COMP%]{background-color:#fff;color:#000;padding:20px}.visualization-card[_ngcontent-%COMP%], .control-panel[_ngcontent-%COMP%], .explanation-panel[_ngcontent-%COMP%], .visualization-3d-container[_ngcontent-%COMP%], .research-section[_ngcontent-%COMP%], .info-card[_ngcontent-%COMP%]{background-color:#fff;color:#000;box-shadow:none;border:1px solid #ddd;break-inside:avoid;page-break-inside:avoid}.canvas-3d[_ngcontent-%COMP%], .button-group[_ngcontent-%COMP%], .view-mode-toggle[_ngcontent-%COMP%]{display:none}}']})};export{zt as RandomForestVisualizationComponent};
